{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/core/settings.service.ts","./src/app/core/startup/startup.component.ts","./src/app/core/startup/startup.component.html","./src/app/core/startup/startup.module.ts","./src/app/layouts/full-width-layout/full-width-layout.component.ts","./src/app/layouts/full-width-layout/full-width-layout.component.html","./src/app/layouts/header/header.component.ts","./src/app/layouts/header/header.component.html","./src/app/layouts/layouts.module.ts","./src/app/layouts/page-layout/page-layout.component.ts","./src/app/layouts/page-layout/page-layout.component.html","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { PageLayoutComponent } from './layouts/page-layout/page-layout.component';\r\nimport { FullWidthLayoutComponent } from './layouts/full-width-layout/full-width-layout.component';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: 'home',\r\n    component: FullWidthLayoutComponent,\r\n    loadChildren: () => import('./pages/home-page/home-page.module').then(m => m.HomePageModule)\r\n  },\r\n  {\r\n    path: 'console',\r\n    component: PageLayoutComponent,\r\n    loadChildren: () => import('./pages/console-page/console-page.module').then(m => m.ConsolePageModule)\r\n  },\r\n  {\r\n    path: 'settings',\r\n    component: PageLayoutComponent,\r\n    loadChildren: () => import('./pages/settings-page/settings-page.module').then(m => m.SettingsPageModule)\r\n  },\r\n  {\r\n    path: 'e',\r\n    component: PageLayoutComponent,\r\n    loadChildren: () => import('./pages/exercise-page/exercise-page.module').then(m => m.ExercisePageModule)\r\n  },\r\n  {\r\n    path: 'tracks',\r\n    component: FullWidthLayoutComponent,\r\n    loadChildren: () => import('./pages/tracks-page/tracks-page.module').then(m => m.TracksPageModule)\r\n  },\r\n  {\r\n    path: '',\r\n    redirectTo: 'home',\r\n    pathMatch: 'full'\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [\r\n    RouterModule.forRoot(routes),\r\n  ],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }\r\n","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.scss']\r\n})\r\nexport class AppComponent {\r\n  title = 'exercises-app';\r\n}\r\n","<app-startup></app-startup>\r\n<router-outlet></router-outlet>","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\n\r\nimport { ClarityModule } from '@clr/angular';\r\nimport { AngularFireModule } from '@angular/fire';\r\nimport { CodeEditorModule } from '@ngstack/code-editor';\r\n\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\n\r\nimport { LayoutsModule } from './layouts/layouts.module';\r\nimport { StartupModule } from './core/startup/startup.module';\r\n\r\nimport { environment } from 'src/environments/environment';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    AppRoutingModule,\r\n    HttpClientModule,\r\n    ClarityModule,\r\n    AngularFireModule.initializeApp(environment.firebase),\r\n    BrowserAnimationsModule,\r\n    CodeEditorModule.forRoot(),\r\n    LayoutsModule,\r\n    StartupModule,\r\n  ],\r\n  providers: [],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","import { EventEmitter, Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { BehaviorSubject } from 'rxjs';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class SettingsService {\r\n  // backend logic\r\n  private backendUrl = 'http://localhost:5000/api/v1/';\r\n  backend = new BehaviorSubject<string>(this.backendUrl);\r\n\r\n  // connection status\r\n  isConnected = new BehaviorSubject<boolean>(false);\r\n  connectRequested = new EventEmitter<void>();\r\n  checkTimoutId: number;\r\n  checkConnection = new BehaviorSubject<boolean>(true);\r\n\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n  changeBackend(address: string): void {\r\n    if (address.endsWith('api/v1/')) {\r\n      this.backendUrl = address;\r\n    } else {\r\n      this.backendUrl = `${address}api/v1/`;\r\n    }\r\n    this.backend.next(this.backendUrl);\r\n  }\r\n\r\n  /**\r\n   * connectRequested Event is emitted, which will be consumed by the\r\n   * startup component.\r\n   */\r\n  public requestBackendConnect():  void {\r\n    this.connectRequested.emit();\r\n  }\r\n\r\n  /**\r\n   * Starts the connection autocheck\r\n   */\r\n  public startCheckConnection(): void {\r\n    this.checkTimoutId = setTimeout(this.checkBackendConnection.bind(this), 5000);\r\n  }\r\n\r\n  /**\r\n   * Stops the connection autocheck\r\n   */\r\n  public stopCheckConnection(): void {\r\n    if (this.checkTimoutId) {\r\n      clearTimeout(this.checkTimoutId);\r\n      this.checkTimoutId = null;\r\n    }\r\n  }\r\n\r\n  public checkBackendConnection(): Promise<boolean> {\r\n    return new Promise(resolve => {\r\n      if (!this.backendUrl) {\r\n        this.isConnected.next(false);\r\n        resolve(false);\r\n      }\r\n      this.http.get(this.backendUrl + 'ping').subscribe({\r\n        next: () =>  {\r\n          this.isConnected.next(true);\r\n          resolve(true);\r\n        },\r\n        error: () => {\r\n          this.isConnected.next(false);\r\n          resolve(false);\r\n        }\r\n      });\r\n    });\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { SettingsService } from '../settings.service';\r\n\r\n@Component({\r\n  selector: 'app-startup',\r\n  templateUrl: './startup.component.html',\r\n  styleUrls: ['./startup.component.scss']\r\n})\r\nexport class StartupComponent implements OnInit {\r\n  // component logic\r\n  active = false;\r\n  pending = true;\r\n\r\n  // content triggers\r\n  triggerFinished = false;\r\n  triggerOptions = false;\r\n\r\n  // save the collaping timeout\r\n  collapseTimeoutId: number;\r\n\r\n  // elements\r\n  backendUrl: string;\r\n\r\n\r\n  constructor(private settings: SettingsService) { }\r\n\r\n  ngOnInit(): void {\r\n    // subscribe to backend url\r\n    // this.settings.backend.subscribe({\r\n    //   next: url => {\r\n    //     if (url) {\r\n    //       this.findBackend();\r\n    //     } else {\r\n    //       this.retry();\r\n    //     }\r\n    //   }\r\n    // });\r\n\r\n    // listen to requests\r\n    this.settings.connectRequested.subscribe({\r\n      next: () => {\r\n        // stop ongoing collapsing\r\n        this.stopCollapsing();\r\n\r\n        // reset and try to connect\r\n        this.resetComponent();\r\n        this.findBackend();\r\n      }\r\n    });\r\n  }\r\n\r\n  resetComponent(): void {\r\n    this.active = true;\r\n    this.pending = true;\r\n    this.triggerFinished = false;\r\n    this.triggerOptions = false;\r\n  }\r\n\r\n  onChangeBackend(address?: string): void {\r\n    if (address) {\r\n      this.settings.changeBackend(address);\r\n    } else {\r\n      this.settings.changeBackend('http://localhost:5000/');\r\n    }\r\n  }\r\n\r\n  findBackend(): void {\r\n    this.settings.checkBackendConnection().then(online => {\r\n      this.pending = false;\r\n      if (online) {\r\n        this.startCollapsing();\r\n      } else {\r\n        this.triggerOptions = true;\r\n      }\r\n    });\r\n  }\r\n\r\n  retry(): void {\r\n    this.pending = true;\r\n    this.triggerOptions = false;\r\n    this.findBackend();\r\n  }\r\n\r\n  private startCollapsing(): void {\r\n    this.pending = false;\r\n    this.triggerOptions = false;\r\n    this.triggerFinished = true;\r\n    this.collapseTimeoutId = setTimeout(() => this.active = false, 800);\r\n  }\r\n\r\n  public stopCollapsing(): void {\r\n    if (this.collapseTimeoutId) {\r\n      clearTimeout(this.collapseTimeoutId);\r\n      this.collapseTimeoutId = null;\r\n    }\r\n  }\r\n\r\n}\r\n","<clr-modal [(clrModalOpen)]=\"active\" [clrModalSize]=\"'lg'\" *ngIf=\"active\">\r\n    <div class=\"modal-body\">\r\n        <p>\r\n            <span class=\"spinner spinner-inverse\" *ngIf=\"pending\"></span>\r\n        </p>\r\n        <div *ngIf=\"triggerFinished\" class=\"success\">\r\n            <clr-icon shape=\"check\" size=72></clr-icon>\r\n            <span>Success! Backend found - we start is a second.</span>\r\n        </div>\r\n        <div *ngIf=\"triggerOptions\">\r\n            <clr-tabs>\r\n\r\n              <clr-tab>\r\n                    <button clrTabLink id=\"local\">Local</button>\r\n                    <clr-tab-content>\r\n                        <p>No backend was found. You need the <i>hydenv</i> CLI running.</p>\r\n                        <p>\r\n                          The CLI will issue all SQL queries to the PostgreSQL server connected in the CLI.\r\n                          This way, you can solve exercises locally or connect to a cloud instance if any was\r\n                          provided to you.\r\n                        </p>\r\n                        <p>Open a command prompt. If you have saved a connection before:</p>\r\n                        <code><pre>python -m hydenv exercises start</pre></code>\r\n                        <p>In case you need to specify the PostgreSQL server, run:</p>\r\n                        <code><pre>python -m hydenv exercises start --connection=postgresql://user:password@host:port/dbname</pre></code>\r\n                    </clr-tab-content>\r\n                </clr-tab>\r\n\r\n                <clr-tab>\r\n                  <button clrTabLink>Remote</button>\r\n                  <clr-tab-content>\r\n                    <clr-alert [clrAlertClosable]=\"false\" clrAlertType=\"warning\">\r\n                      <clr-alert-item>\r\n                        <span class=\"alert-text\">\r\n                          This feature is experimental and be used at your own risk.\r\n                          It can cause costs.\r\n                        </span>\r\n                      </clr-alert-item>\r\n                    </clr-alert>\r\n                    <p>\r\n                      To directly connct to a remote backend, you need that hosted.\r\n                      Hosting causes costs and has to be paid. If you didn't set this up yourself,\r\n                      you need to run the backend locally.\r\n                    </p>\r\n                    <p>Otherwise type the backend url in below</p>\r\n                    <input clrInput type=\"text\" [(ngModel)]=\"backendUrl\">\r\n                  </clr-tab-content>\r\n                </clr-tab>\r\n            </clr-tabs>\r\n        </div>\r\n    </div>\r\n\r\n    <div class=\"modal-footer\">\r\n        <button class=\"btn btn-primary\" *ngIf=\"backendUrl && backendUrl !== ''\" (click)=\"onChangeBackend(backendUrl);retry()\">Connect</button>\r\n        <button class=\"btn btn-primary\" *ngIf=\"!backendUrl || backendUrl == ''\" (click)=\"onChangeBackend();retry()\">Retry</button>\r\n    </div>\r\n</clr-modal>\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule } from '@angular/forms';\r\n\r\nimport { ClarityModule } from '@clr/angular';\r\n\r\nimport { StartupComponent } from './startup.component';\r\n\r\n\r\n@NgModule({\r\n  declarations: [StartupComponent],\r\n  imports: [\r\n    CommonModule,\r\n    ClarityModule,\r\n    FormsModule\r\n  ],\r\n  exports: [StartupComponent]\r\n})\r\nexport class StartupModule { }\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-full-width-layout',\r\n  templateUrl: './full-width-layout.component.html',\r\n  styleUrls: ['./full-width-layout.component.scss']\r\n})\r\nexport class FullWidthLayoutComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<clr-main-container>\r\n\r\n    <app-header></app-header>\r\n\r\n    <div class=\"content-container\">\r\n        <div class=\"content-area\">\r\n            <router-outlet></router-outlet>\r\n        </div>\r\n    </div>\r\n\r\n</clr-main-container>","import { Component, OnInit, OnDestroy } from '@angular/core';\r\nimport { Subscription } from 'rxjs';\r\n\r\nimport { SettingsService } from 'src/app/core/settings.service';\r\n\r\n@Component({\r\n  selector: 'app-header',\r\n  templateUrl: './header.component.html',\r\n  styleUrls: ['./header.component.scss']\r\n})\r\nexport class HeaderComponent implements OnInit, OnDestroy {\r\n  backendConnected = false;\r\n  backendConnectSubscription: Subscription;\r\n\r\n  constructor(private settings: SettingsService) { }\r\n\r\n  ngOnInit(): void {\r\n    this.backendConnectSubscription = this.settings.isConnected.subscribe({\r\n      next: status => this.backendConnected = status\r\n    });\r\n  }\r\n\r\n  onConnect(): void {\r\n    this.settings.requestBackendConnect();\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.backendConnectSubscription.unsubscribe();\r\n  }\r\n\r\n}\r\n","<clr-header class=\"header-6\">\r\n\r\n    <div class=\"branding\">\r\n      <a routerLink=\"/\" class=\"nav-link\">\r\n        <img src=\"assets/logo.png\">\r\n        <span class=\"title\">hydrocode</span>\r\n      </a>\r\n    </div>\r\n\r\n    <div class=\"header-nav\" [clr-nav-level]=\"1\">\r\n        <a routerLink=\"/tracks\" routerLinkActive=\"active\" class=\"nav-link nav-text\">Tracks</a>\r\n    </div>\r\n\r\n    <div class=\"header-actions\">\r\n      <a class=\"nav-link nav-icon tooltip tooltip-md tooltip-bottom-left\" href=\"javascript://\" (click)=\"onConnect()\" aria-label=\"connection status\">\r\n        <clr-icon [attr.shape]=\"backendConnected ? 'link' : 'unlink'\"></clr-icon>\r\n        <span class=\"tooltip-content\">The backend server is: <code>'{{ backendConnected ? 'online' : 'offline' }}'</code></span>\r\n      </a>\r\n        <a routerLink=\"/console\" routerLinkActive=\"active\" class=\"nav-link nav-icon\" aria-label=\"console\">\r\n            <clr-icon shape=\"terminal\"></clr-icon>\r\n        </a>\r\n        <clr-dropdown>\r\n          <button class=\"nav-icon\" clrDropdownTrigger aria-label=\"toggle settings menu\">\r\n            <clr-icon shape=\"cog\"></clr-icon>\r\n            <clr-icon shape=\"caret down\"></clr-icon>\r\n          </button>\r\n          <clr-dropdown-menu *clrIfOpen clrPosition=\"bottom-right\">\r\n            <a routerLink=\"/settings\" clrDropdownItem>Settings</a>\r\n            <a clrDropdownItem [disabled]=\"true\">Login</a>\r\n          </clr-dropdown-menu>\r\n        </clr-dropdown>\r\n    </div>\r\n\r\n</clr-header>\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { RouterModule } from '@angular/router';\r\n\r\nimport { ClarityModule } from '@clr/angular';\r\n\r\nimport { HeaderComponent } from './header/header.component';\r\nimport { FullWidthLayoutComponent } from './full-width-layout/full-width-layout.component';\r\nimport { PageLayoutComponent } from './page-layout/page-layout.component';\r\n\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    FullWidthLayoutComponent,\r\n    HeaderComponent,\r\n    PageLayoutComponent\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    ClarityModule,\r\n    RouterModule,\r\n  ],\r\n  exports: [\r\n    FullWidthLayoutComponent,\r\n    PageLayoutComponent\r\n  ]\r\n})\r\nexport class LayoutsModule { }\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-page-layout',\r\n  templateUrl: './page-layout.component.html',\r\n  styleUrls: ['./page-layout.component.scss']\r\n})\r\nexport class PageLayoutComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<clr-main-container>\r\n\r\n    <app-header></app-header>\r\n\r\n    <div class=\"content-container\">\r\n        <div class=\"content-area main\">\r\n            <div class=\"wrapper\">\r\n                <router-outlet></router-outlet>\r\n            </div>\r\n        </div>\r\n    </div>\r\n\r\n</clr-main-container>","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false,\r\n  firebase: {\r\n    apiKey: \"AIzaSyDsfuR7dGyYFuXCzq1TFChCP-K6iqjTimA\",\r\n    authDomain: \"data-course-261609.firebaseapp.com\",\r\n    databaseURL: \"https://data-course-261609.firebaseio.com\",\r\n    projectId: \"data-course-261609\",\r\n    storageBucket: \"data-course-261609.appspot.com\",\r\n    messagingSenderId: \"26810996853\",\r\n    appId: \"1:26810996853:web:68eaf158951b103202003c\",\r\n    measurementId: \"G-63LD6L8LCX\"\r\n  }\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n"],"sourceRoot":"webpack:///"}